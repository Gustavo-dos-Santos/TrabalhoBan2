package controller;

import java.sql.Connection;
import java.sql.SQLException;
import java.util.List;
import java.util.Scanner;

import entity.Objetos;
import entity.Ocorrencias;
import entity.Proprietario;
import entity.Usuarios;
import model.ObjetosModel;
import model.UsuariosModel;

public class UsuariosController {
    private static Scanner input = new Scanner(System.in);  

    public static void Register(Connection con) throws SQLException {

        Usuarios us = new Usuarios();
        
        System.out.println("Nome: ");
        String nome = input.next();

        System.out.println("CPF: ");
        String cpf = input.next();
       

  
        System.out.println("Senha : ");
        String pass = input.next();
        

 
        System.out.println("Data de Nascimento: ");
        String dts = input.next();
       

   
        System.out.println("Telefone: ");
        String tel = input.next();
       


        System.out.println("Email: ");
        String email = input.next();
        
        us.setCpf(cpf);
        us.setDtNasc(dts);
        us.setEmail(email);
        us.setNome(nome);
        us.setPassword(pass);
        us.setTelefone(tel);
            

        UsuariosModel.create(us, con);
        System.out.println("Usu√°rio registrado com sucesso.");
    }

	public static void update(Usuarios usuario, Connection con) throws SQLException {
		UsuariosModel.update(usuario, con);
	}

	public static void delete(Usuarios usuario, Connection con) throws SQLException {
		List<Objetos> objs = ObjetosController.listAllByCpf(usuario, con);
		List<Ocorrencias> oc = OcorrenciasController.listAllByCpf(usuario, con);
		List<Proprietario>p = ProprietarioController.listAllByCpf(usuario, con);
		if(objs.size() != 0 && objs != null) {
			objs.forEach((element)->{
				try {
					ObjetosController.delete(element.getId(), con);
				} catch (SQLException e) {
					e.printStackTrace();
				}
			});
			
		}
		if(objs.size() != 0 && objs != null) {
			oc.forEach((element)->{
				try {
					OcorrenciasController.delete(element.getId(), con);
				} catch (SQLException e) {
					e.printStackTrace();
				}
			});
		}
		if(objs.size() != 0 && objs != null) {
			
			p.forEach((element)->{
				try {
					ProprietarioController.deleteId(element.getId(), con);
				} catch (SQLException e) {
					e.printStackTrace();
				}
			});
		}

		
		UsuariosModel.delete(usuario.getCpf(), con);
	}
	
}
